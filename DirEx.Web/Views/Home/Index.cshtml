@using DirEx.Web.Keys
@using DirEx.Ldap.Data
@using DirEx.Web.Extensions

@model LdapTree

@{
    ViewBag.Title = Model.Server;
}

<main>
	<section class="sidebar">
		@ShowTree(Model.Entries, true)
	</section>
	<section class="content">
		@Html.Partial("_Alerts")
		@if (Model.CurrentEntry != null)
		{
			<div class="panel panel-default">
				<div class="panel-heading">
					@{
						var imageClass = Model.CurrentEntry.RelativeName.StartsWith(ModelNames.DomainComponent) ? "sitemap" :
							Model.CurrentEntry.RelativeName.StartsWith(ModelNames.OrganizationUnit) ? "users" : "user";
					}
					<h3 class="panel-title"><i class="fa fa-@imageClass">&nbsp;&nbsp;</i> @Model.CurrentEntry.RelativeName</h3>
				</div>
				<div class="panel-body">
					<dl class="dl-horizontal">
						@foreach (var attributeValue in Model.CurrentEntry.AttributeValues)
						{
							var isObjectClass = attributeValue.Item1.Equals("objectclass", StringComparison.OrdinalIgnoreCase);
							var isRdnComponent = Model.CurrentEntry.RelativeName.IndexOf(String.Format("{0}={1}", attributeValue.Item1, attributeValue.Item2), StringComparison.OrdinalIgnoreCase) >= 0;

							<dt class="@(isObjectClass ? "text-primary" : isRdnComponent ? "text-success" : "text-default")">@attributeValue.Item1</dt>
							<dd class="@(isObjectClass ? "text-info" : isRdnComponent ? "text-success" : "text-muted")">@attributeValue.Item2</dd>
						}
					</dl>
				</div>
			</div>
		}
	</section>
</main>

@helper ShowTree(ICollection<LdapEntry> entries, bool root = false)
{
	<ul class="list-group">
		@foreach (var entry in entries)
		{
			var entryExpands = entry.Entries.Any() && (root || (Request.Params[RequestParams.CurrentDn].EndsWith(entry.DistinguishedName)));
			var entrySelected = Model.CurrentEntry.DistinguishedName.Equals(entry.DistinguishedName);
			var itemClass = entrySelected ? "active" : String.Empty;
			var linkClass = entrySelected ? "active" : String.Empty;
			var imageClass = entry.RelativeName.StartsWith(ModelNames.DomainComponent) ? "sitemap" :
				entry.RelativeName.StartsWith(ModelNames.OrganizationUnit) ? "users" : "user";

			<li id="item@(entry.RelativeName.ToHtmlId())" class="list-group-item @itemClass">
				@if (entryExpands)
				{
					<i class="fa fa-caret-down">&nbsp;</i>
				}
				else
				{
					<i class="fa fa-caret-right">&nbsp;</i>
				}
				<i class="fa fa-@imageClass text-muted">&nbsp;</i>
				@Html.ActionLink(entry.RelativeName, "index", new { currentDn = @entry.DistinguishedName }, new { @class = linkClass })
				@if (entryExpands)
				{
					@ShowTree(entry.Entries)
				}
			</li>
		}
	</ul>
}

@section scripts {
	<script>
		$("document").ready(function () {
			var groupItem = $('#item@(Model.CurrentEntry.RelativeName.ToHtmlId())');
			var top = groupItem.offset().top - 60; // offset for static header
			$('.sidebar').animate({ scrollTop: top }, 0);
		})
	</script>
}